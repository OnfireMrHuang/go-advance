// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"context"
	"github.com/sirupsen/logrus"
	"mingyuanyun.com/mic/bigdata-opcenter/internal/biz/collector"
	"mingyuanyun.com/mic/bigdata-opcenter/internal/conf"
	"mingyuanyun.com/mic/bigdata-opcenter/internal/data"
	"mingyuanyun.com/mic/bigdata-opcenter/internal/server"
	"mingyuanyun.com/mic/bigdata-opcenter/internal/service"
	"mingyuanyun.com/mic/bigdata-opcenter/pkg/app"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(bootstrap *conf.Bootstrap, contextContext context.Context, logger *logrus.Logger) (*app.App, func(), error) {
	dataData, cleanup, err := data.NewData(bootstrap, logger)
	if err != nil {
		return nil, nil, err
	}
	indicator := data.NewIndicator(logger, dataData)
	collectorCollector := collector.NewCollector(logger, indicator)
	serviceService := service.NewService(bootstrap, logger, collectorCollector)
	cronServer := server.NewCronServer(bootstrap, serviceService, dataData, logger)
	app := newCronApp(logger, cronServer)
	return app, func() {
		cleanup()
	}, nil
}
